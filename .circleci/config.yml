# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2

default_environment: &default_environment
  RAILS_ENV: test
  RACK_ENV: test
  FCREPO_TEST_PORT: 8080/fcrepo
  BUNDLE_JOBS: 4
  BUNDLE_RETRY: 3
  NOKOGIRI_USE_SYSTEM_LIBRARIES: true
  ENGINE_CART_RAILS_OPTIONS: --skip-git --skip-bundle --skip-listen --skip-spring --skip-yarn --skip-keeps --skip-action-cable --skip-coffee --skip-puma --skip-test
  SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
  COVERALLS_PARALLEL: true  
  MAILSERVER: smtp.example.com
  MAILUSER: test@example.com
  MAILPASS: word
  SERVERNAME: localhost
  NFS_DIR: tmp

jobs:
  build:
    docker:
    # legacy needed for phantomjs
    - image: circleci/ruby:2.5.1-node-browsers-legacy
    - image: circleci/redis:4
    - image: ualbertalib/docker-fcrepo4:4.7
      environment:
        CATALINA_OPTS: "-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC"
    - image: solr:7
      command: bin/solr -cloud -noprompt -f -p 8985

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/digitalwpi

    environment:
      <<: *default_environment

    steps:
    - restore_cache:
        keys:
        - source-v1-{{ .Branch }}-{{ .Revision }}
        - source-v1-{{ .Branch }}-
        - source-v1-

    - checkout

    - save_cache:
        key: source-v1-{{ .Branch }}-{{ .Revision }}
        paths:
        - ".git"

    # BUNDLE_PATH is unset to allow for `bundle config path` to take precedence.
    - run:
        name: Extra environment setup
        command: |
          echo 'unset BUNDLE_PATH' >> $BASH_ENV
    # Download and cache dependencies
    - restore_cache:
        keys:
        - dependencies-v1-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
        - dependencies-v1-{{ .Branch }}
        - dependencies-v1-

    - run:
        name: Install dependencies
        command: |
          gem update --system
          gem update bundler
          bundle config path $CIRCLE_WORKING_DIRECTORY/vendor/bundle
          bundle install
          bundle clean
    - save_cache:
        paths:
        - ./vendor/bundle
        key: dependencies-v1-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

#    - run:
#        name: Call Rubocop
#        command: bundle exec rubocop

    - run:
        name: Start headless Chrome
        command: google-chrome-stable --headless --disable-gpu --no-sandbox --remote-debugging-port=9222 http://localhost
        background: true

    - run:
        name: Load config into SolrCloud
        command: |
          cd solr/config
          zip -1 -r solr_hyrax_config.zip ./*
          curl -H "Content-type:application/octet-stream" --data-binary @solr_hyrax_config.zip "http://localhost:8985/solr/admin/configs?action=UPLOAD&name=hyrax"
          curl -H 'Content-type: application/json' http://localhost:8985/api/collections/ -d '{create: {name: hydra-test, config: hyrax, numShards: 1}}'
    # - run:
    #     name: Run rspec in parallel
    #     command: |
    #       mkdir /tmp/test-results
    #       bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
    - run:
        name: Run rspec tests using circlecis fandanggarntotic method
        command: |
          mkdir /tmp/test-results
          bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results